<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luna.sso.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.luna.sso.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="employee_number" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="is_enabled" jdbcType="INTEGER" property="isEnabled" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_visible" jdbcType="INTEGER" property="isVisible" />
    <result column="device_type" jdbcType="INTEGER" property="deviceType" />
    <result column="push_token" jdbcType="VARCHAR" property="pushToken" />
    <result column="push_type" jdbcType="INTEGER" property="pushType" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, password, employee_number, is_enabled, description, gender, company_id, 
    department_id, phone_number, email, is_visible, device_type, push_token, push_type, 
    is_deleted, create_id, create_time, update_id, update_time
  </sql>
  <select id="selectByExample" parameterType="com.luna.sso.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_izms_core_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_izms_core_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_izms_core_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luna.sso.pojo.UserExample">
    delete from t_izms_core_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luna.sso.pojo.User">
    insert into t_izms_core_user (id, user_name, password, 
      employee_number, is_enabled, description, 
      gender, company_id, department_id, 
      phone_number, email, is_visible, 
      device_type, push_token, push_type, 
      is_deleted, create_id, create_time, 
      update_id, update_time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{employeeNumber,jdbcType=VARCHAR}, #{isEnabled,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{isVisible,jdbcType=INTEGER}, 
      #{deviceType,jdbcType=INTEGER}, #{pushToken,jdbcType=VARCHAR}, #{pushType,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.luna.sso.pojo.User">
    insert into t_izms_core_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="employeeNumber != null">
        employee_number,
      </if>
      <if test="isEnabled != null">
        is_enabled,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isVisible != null">
        is_visible,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>
      <if test="pushToken != null">
        push_token,
      </if>
      <if test="pushType != null">
        push_type,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isVisible != null">
        #{isVisible,jdbcType=INTEGER},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="pushToken != null">
        #{pushToken,jdbcType=VARCHAR},
      </if>
      <if test="pushType != null">
        #{pushType,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luna.sso.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from t_izms_core_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_izms_core_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null">
        employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnabled != null">
        is_enabled = #{record.isEnabled,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isVisible != null">
        is_visible = #{record.isVisible,jdbcType=INTEGER},
      </if>
      <if test="record.deviceType != null">
        device_type = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.pushToken != null">
        push_token = #{record.pushToken,jdbcType=VARCHAR},
      </if>
      <if test="record.pushType != null">
        push_type = #{record.pushType,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_izms_core_user
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
      is_enabled = #{record.isEnabled,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      is_visible = #{record.isVisible,jdbcType=INTEGER},
      device_type = #{record.deviceType,jdbcType=INTEGER},
      push_token = #{record.pushToken,jdbcType=VARCHAR},
      push_type = #{record.pushType,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luna.sso.pojo.User">
    update t_izms_core_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        employee_number = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isVisible != null">
        is_visible = #{isVisible,jdbcType=INTEGER},
      </if>
      <if test="deviceType != null">
        device_type = #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="pushToken != null">
        push_token = #{pushToken,jdbcType=VARCHAR},
      </if>
      <if test="pushType != null">
        push_type = #{pushType,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luna.sso.pojo.User">
    update t_izms_core_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      employee_number = #{employeeNumber,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_visible = #{isVisible,jdbcType=INTEGER},
      device_type = #{deviceType,jdbcType=INTEGER},
      push_token = #{pushToken,jdbcType=VARCHAR},
      push_type = #{pushType,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>